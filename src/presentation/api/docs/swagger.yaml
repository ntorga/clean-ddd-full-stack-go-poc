basePath: /api
definitions:
  dto.CreateContact:
    properties:
      name:
        type: string
      nickname:
        type: string
      phone:
        type: string
    type: object
  dto.UpdateContact:
    properties:
      id:
        type: integer
      name:
        type: string
      nickname:
        type: string
      phone:
        type: string
    type: object
  entity.Contact:
    properties:
      id:
        type: integer
      name:
        type: string
      nickname:
        type: string
      phone:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: northontorga+github@gmail.com
    name: Northon Torga
    url: https://ntorga.com/
  description: 'Clean Architecture & DDD with Go, Tailwind, Alpine.js, HTMX, and SQLite:
    A Proof of Concept'
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Clean DDD TAGHS PoC Contacts
  version: 0.0.1
paths:
  /v1/contact/:
    get:
      consumes:
      - application/json
      description: List contacts.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.Contact'
            type: array
      summary: ReadContacts
      tags:
      - contact
    post:
      consumes:
      - application/json
      description: Create a new contact.
      parameters:
      - description: NewContact
        in: body
        name: createContactDto
        required: true
        schema:
          $ref: '#/definitions/dto.CreateContact'
      produces:
      - application/json
      responses:
        "201":
          description: ContactCreated
          schema:
            type: object
      summary: CreateNewContact
      tags:
      - contact
    put:
      consumes:
      - application/json
      description: Update a contact.
      parameters:
      - description: UpdateContact (Only id is required.)
        in: body
        name: updateContactDto
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateContact'
      produces:
      - application/json
      responses:
        "200":
          description: ContactUpdated
          schema:
            type: object
      summary: UpdateContact
      tags:
      - contact
  /v1/contact/{id}/:
    delete:
      consumes:
      - application/json
      description: Delete a contact.
      parameters:
      - description: ContactId
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ContactDeleted
          schema:
            type: object
      summary: DeleteContact
      tags:
      - contact
swagger: "2.0"
